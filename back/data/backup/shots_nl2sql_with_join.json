[
  {
    "question": "2025년 2월 합금철, 자가철스크랩, 구입스크랩 중량과 전월 대비 증감은?",
    "answer": "WITH current_month AS (SELECT GBN_L1, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND GBN_L1 IN ('합금철', '자가철', '구입 스크랩') GROUP BY GBN_L1), previous_month AS (SELECT GBN_L1, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND GBN_L1 IN ('합금철', '자가철', '구입 스크랩') GROUP BY GBN_L1)SELECT cm.GBN_L1, cm.total_weight AS current_weight, COALESCE(pm.total_weight, 0) AS previous_weight, cm.total_weight - COALESCE(pm.total_weight, 0) AS weight_changeFROM current_month cmLEFT JOIN previous_month pm ON cm.GBN_L1 = pm.GBN_L1ORDER BY cm.GBN_L1;"
  },
  {
    "question": "2025년 2월 기준 연구소 요청 재고 중량 및 전월 대비 증감은?",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND R_ORDER = 'Y' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND R_ORDER = 'Y' GROUP BY TYPE)SELECT COALESCE(c.TYPE, p.TYPE) AS TYPE, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(p.total_weight, 0) AS previous_weight, (COALESCE(c.total_weight, 0) - COALESCE(p.total_weight, 0)) AS weight_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "2025년 2월 합금철, 자가철스크랩, 구입스크랩 중량과 전월 대비 증감은?",
    "answer": "WITH current_month AS (SELECT GBN_L1, GBN_L2, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND GBN_L1 IN ('합금철', '자가철', '구입 스크랩') GROUP BY GBN_L1,GBN_L2), previous_month AS (SELECT GBN_L1, GBN_L2, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND GBN_L1 IN ('합금철', '자가철', '구입 스크랩') GROUP BY GBN_L1,GBN_L2)SELECT COALESCE(c.GBN_L1, p.GBN_L1) AS GBN_L1, COALESCE(c.GBN_L2, p.GBN_L2) AS GBN_L2, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(p.total_weight, 0) AS previous_weight, COALESCE(c.total_weight, 0) - COALESCE(p.total_weight, 0) AS weight_changeFROM current_month cFULL OUTER JOIN previous_month p ON c.GBN_L1 = p.GBN_L1AND c.GBN_L2 = p.GBN_L2ORDER BY GBN_L1, GBN_L2;"
  },
  {
    "question": "2025년 2월 기준 제품, 재공, 원료 재고 금액과 중량, 그리고 전월 대비 증감액은 얼마인가?",
    "answer": "WITH product_data AS (SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '제품'), wip_data AS (SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '재공'), raw_material_data AS (SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28'), previous_product_data AS (SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '제품'), previous_wip_data AS (SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '재공'), previous_raw_material_data AS (SELECT SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-01-31')SELECT '제품' AS category, p.total_weight, p.total_amount, (p.total_amount - COALESCE(pp.total_amount, 0)) AS amount_changeFROM product_data pJOIN previous_product_data pp ON TRUEUNION ALLSELECT '재공' AS category, w.total_weight, w.total_amount, (w.total_amount - COALESCE(pw.total_amount, 0)) AS amount_changeFROM wip_data wJOIN previous_wip_data pw ON TRUEUNION ALLSELECT '원료' AS category, r.total_weight, r.total_amount, (r.total_amount - COALESCE(pr.total_amount, 0)) AS amount_changeFROM raw_material_data rJOIN previous_raw_material_data pr ON TRUE;"
  },
  {
    "question": "2025년 2월 재공 재고의 소재성과 제품성 구분별 중량과 전월 대비 증감 보여줘",
    "answer": "WITH monthly_data AS (SELECT ITEM_ACCOUNT, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '재공' GROUP BY ITEM_ACCOUNT), previous_month_data AS (SELECT ITEM_ACCOUNT, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '재공' GROUP BY ITEM_ACCOUNT)SELECT m.ITEM_ACCOUNT, m.total_weight, (m.total_weight - COALESCE(p.total_weight, 0)) AS weight_changeFROM monthly_data mLEFT JOIN previous_month_data p ON m.ITEM_ACCOUNT = p.ITEM_ACCOUNT;"
  },
  {
    "question": "2025년 2월 기준 연구소 요청 재고 중량 및 전월 대비 증감은?",
    "answer": "WITH current_month AS ( SELECT GBN_NAME, ITEM_ACCOUNT, TYPE, SUM(WGT) as current_month_wgt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-02-28' AND R_ORDER = 'Y' GROUP BY GBN_NAME, ITEM_ACCOUNT, TYPE ), previous_month AS ( SELECT GBN_NAME, ITEM_ACCOUNT, TYPE, SUM(WGT) as previous_month_wgt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-01-31' AND R_ORDER = 'Y' GROUP BY GBN_NAME, ITEM_ACCOUNT, TYPE ) SELECT COALESCE(cm.GBN_NAME, pm.GBN_NAME) as GBN_NAME, COALESCE(cm.ITEM_ACCOUNT, pm.ITEM_ACCOUNT) as ITEM_ACCOUNT, COALESCE(cm.TYPE, pm.TYPE) as TYPE, cm.current_month_wgt as feb_wgt, pm.previous_month_wgt as jan_wgt, COALESCE(cm.current_month_wgt, 0) - COALESCE(pm.previous_month_wgt, 0) as weight_change, CASE WHEN COALESCE(pm.previous_month_wgt, 0) = 0 THEN NULL ELSE ROUND((COALESCE(cm.current_month_wgt, 0) - pm.previous_month_wgt) / pm.previous_month_wgt * 100, 2) END as change_percentage FROM current_month cm FULL OUTER JOIN previous_month pm ON cm.GBN_NAME = pm.GBN_NAME AND cm.ITEM_ACCOUNT = pm.ITEM_ACCOUNT AND cm.TYPE = pm.TYPE ORDER BY GBN_NAME, ITEM_ACCOUNT, TYPE"
  },
  {
    "question": "최근 3개월의 자재 중 사내 자가발생철 자재의 중량 추이를 조회하고, 각 월별로 중량이 가장 큰 항목을 표시해주세요.",
    "answer": "WITH recent_months AS (SELECT DISTINCT FORMAT_DATE('%Y-%m', BASE_YMD) AS MONTH FROM css_daquv.POC_RAW_MATERIAL_MONTHLY ORDER BY MONTH DESC LIMIT 3), monthly_weights AS (SELECT FORMAT_DATE('%Y-%m', BASE_YMD) AS MONTH, MATL_NAME, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE FORMAT_DATE('%Y-%m', BASE_YMD) IN (SELECT MONTH FROM recent_months) AND GBN_L1 = '자가철' GROUP BY MONTH,MATL_NAME), max_weights AS (SELECT MONTH, MAX(total_weight) AS max_weight FROM monthly_weights GROUP BY MONTH)SELECT mw.MONTH, mw.MATL_NAME, mw.total_weight, CASE WHEN mw.total_weight = mw2.max_weight THEN 'Max Weight' ELSE '' END AS max_weight_flagFROM monthly_weights mwJOIN max_weights mw2 ON mw.MONTH = mw2.MONTHORDER BY mw.MONTH;"
  },
  {
    "question": "최근 한 달간 어떤 영업 본부가 재고량이 제일 많이 늘어났어?",
    "answer": "WITH current_month AS (SELECT CASE WHEN  TEAM_CUST_GRP_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트') THEN '영업1본부' WHEN  TEAM_CUST_GRP_NM IN ('봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀') THEN '영업2본부' WHEN  TEAM_CUST_GRP_NM IN ('STS수출영업팀', '공구강수출영업팀') THEN '영업3본부' WHEN  TEAM_CUST_GRP_NM = '탄합영업실' THEN '탄합영업실' ELSE '기타' END AS division, SUM(WGT) AS current_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-04-30' GROUP BY division), previous_month AS (SELECT CASE WHEN  TEAM_CUST_GRP_NM IN ('선재내수영업팀', '강관영업팀', '내수영업파트', '수출영업파트') THEN '영업1본부' WHEN  TEAM_CUST_GRP_NM IN ('봉강내수영업팀', '공구강내수영업팀', '특수합금영업팀') THEN '영업2본부' WHEN  TEAM_CUST_GRP_NM IN ('STS수출영업팀', '공구강수출영업팀') THEN '영업3본부' WHEN  TEAM_CUST_GRP_NM = '탄합영업실' THEN '탄합영업실' ELSE '기타' END AS division, SUM(WGT) AS previous_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-03-31' GROUP BY division)SELECT c.division, c.current_weight - COALESCE(p.previous_weight, 0) AS weight_changeFROM current_month cLEFT JOIN previous_month p ON c.division = p.divisionORDER BY weight_change DESCLIMIT 1;"
  },
  {
    "question": "24년 12월 대비 25년 2월의 제품 재고량 증가분과 STS, 탄합강, 특수합금, 공구강의 재고량 증가분을 계산해줘",
    "answer": "WITH stock_comparison AS (SELECT BASE_YMD, SUM(CASEWHEN TYPE = '제품' THEN WGTELSE 0 END) AS product_stock, SUM(CASEWHEN IRN_LARGE_NM = 'STS' THEN WGTELSE 0 END) AS STS_stock, SUM(CASEWHEN IRN_LARGE_NM = '탄합강' THEN WGTELSE 0 END) AS alloy_stock, SUM(CASEWHEN IRN_LARGE_NM = '특수합금' THEN WGTELSE 0 END) AS special_alloy_stock, SUM(CASEWHEN IRN_LARGE_NM = '공구 금형강' THEN WGTELSE 0 END) AS tool_steel_stock FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD IN (DATE '2024-12-31', DATE '2025-02-28') GROUP BY BASE_YMD)SELECT '2024-12 to 2025-02' AS PERIOD, COALESCE(feb_2025.product_stock - dec_2024.product_stock, 0) AS product_stock_increase, COALESCE(feb_2025.STS_stock - dec_2024.STS_stock, 0) AS STS_stock_increase, COALESCE(feb_2025.alloy_stock - dec_2024.alloy_stock, 0) AS alloy_stock_increase, COALESCE(feb_2025.special_alloy_stock - dec_2024.special_alloy_stock, 0) AS special_alloy_stock_increase, COALESCE(feb_2025.tool_steel_stock - dec_2024.tool_steel_stock, 0) AS tool_steel_stock_increaseFROM (SELECT * FROM stock_comparison WHERE BASE_YMD = DATE '2024-12-31') AS dec_2024JOIN (SELECT * FROM stock_comparison WHERE BASE_YMD = DATE '2025-02-28') AS feb_2025 ON 1=1;"
  },
  {
    "question": "24년 7,8,9월의 장기재고를 대강종 별로 조회하세요. 월을 컬럼으로 전환해 대강종 별로 8월과 9월 기준으로 전월 대비 증감을 계산하세요. 8월과 9월 각각에 대해 상승폭이 가장 큰 대강종을 표시해주세요.",
    "answer": "WITH monthly_inventory AS (SELECT IRN_LARGE_NM, FORMAT_DATE('%Y-%m', BASE_YMD) AS MONTH, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE LONG_TYPE IN ('장기', '일몰') AND BASE_YMD IN (DATE '2024-07-31', DATE '2024-08-31', DATE '2024-09-30') GROUP BY IRN_LARGE_NM,MONTH), pivoted_inventory AS (SELECT IRN_LARGE_NM, MAX(CASEWHEN MONTH = '2024-07' THEN total_weightELSE 0 END) AS weight_jul, MAX(CASEWHEN MONTH = '2024-08' THEN total_weightELSE 0 END) AS weight_aug, MAX(CASEWHEN MONTH = '2024-09' THEN total_weightELSE 0 END) AS weight_sep FROM monthly_inventory GROUP BY IRN_LARGE_NM), inventory_change AS (SELECT IRN_LARGE_NM, weight_jul, weight_aug, weight_sep, weight_aug - weight_jul AS change_aug, weight_sep - weight_aug AS change_sep FROM pivoted_inventory), max_increase_aug AS (SELECT IRN_LARGE_NM FROM inventory_change ORDER BY change_aug DESC LIMIT 1), max_increase_sep AS (SELECT IRN_LARGE_NM FROM inventory_change ORDER BY change_sep DESC LIMIT 1)SELECT ic.IRN_LARGE_NM, ic.weight_jul, ic.weight_aug, ic.weight_sep, ic.change_aug, ic.change_sep, mia.IRN_LARGE_NM AS max_increase_aug, mis.IRN_LARGE_NM AS max_increase_sepFROM inventory_change icLEFT JOIN max_increase_aug mia ON ic.IRN_LARGE_NM = mia.IRN_LARGE_NMLEFT JOIN max_increase_sep mis ON ic.IRN_LARGE_NM = mis.IRN_LARGE_NMORDER BY ic.IRN_LARGE_NM;"
  },
  {
    "question": "24년 12월 대비 25년 2월의 제품, 재공, 원료 재고의 금액 변동액을 알려줘",
    "answer": "WITH product_data AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '제품'), wip_data AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '재공'), raw_material_data AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28'), previous_product_data AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' AND TYPE = '제품'), previous_wip_data AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' AND TYPE = '재공'), previous_raw_material_data AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2024-12-31')SELECT '제품' AS category, p.total_amount, pp.total_amount AS previous_total_amount, (p.total_amount - COALESCE(pp.total_amount, 0)) AS amount_changeFROM product_data pJOIN previous_product_data pp ON TRUEUNION ALLSELECT '재공' AS category, w.total_amount, pw.total_amount AS previous_total_amount, (w.total_amount - COALESCE(pw.total_amount, 0)) AS amount_changeFROM wip_data wJOIN previous_wip_data pw ON TRUEUNION ALLSELECT '원료' AS category, r.total_amount, pr.total_amount AS previous_total_amount, (r.total_amount - COALESCE(pr.total_amount, 0)) AS amount_changeFROM raw_material_data rJOIN previous_raw_material_data pr ON TRUE;"
  },
  {
    "question": "2025년 2월 기준 원료 재고 중 전월 대비 중량이 가장 크게 변한 게 뭐야?",
    "answer": "WITH current_month_data AS (SELECT MATL_NAME, SUM(WGT) AS current_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' GROUP BY MATL_NAME), previous_month_data AS (SELECT MATL_NAME, SUM(WGT) AS previous_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' GROUP BY MATL_NAME)SELECT c.MATL_NAME, c.current_weight, COALESCE(p.previous_weight, 0) AS previous_weight, ABS(c.current_weight - COALESCE(p.previous_weight, 0)) AS weight_changeFROM current_month_data cLEFT JOIN previous_month_data p ON c.MATL_NAME = p.MATL_NAMEORDER BY weight_change DESCLIMIT 1;"
  },
  {
    "question": "24년 12월 대비 25년 2월의 재공 중량이 몇 kg에서 몇 kg으로 얼마나 줄었어?",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '재공' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' AND TYPE = '재공' GROUP BY TYPE)SELECT COALESCE(c.TYPE, p.TYPE) AS TYPE, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(p.total_weight, 0) AS previous_weight, (COALESCE(c.total_weight, 0) - COALESCE(p.total_weight, 0)) AS weight_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "이번 달과 지난달 제품, 재공 재고 중량과 금액 차이를 알려줘",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS current_weight, SUM(AMT) AS current_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-05-31' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS previous_weight, SUM(AMT) AS previous_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-04-30' GROUP BY TYPE)SELECT COALESCE(c.TYPE, p.TYPE) AS TYPE, COALESCE(c.current_weight, 0) AS current_weight, COALESCE(p.previous_weight, 0) AS previous_weight, (COALESCE(c.current_weight, 0) - COALESCE(p.previous_weight, 0)) AS weight_change, COALESCE(c.current_amount, 0) AS current_amount, COALESCE(p.previous_amount, 0) AS previous_amount, (COALESCE(c.current_amount, 0) - COALESCE(p.previous_amount, 0)) AS amount_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "2025년 1월, 2월 재공 재고의 소재성 제품성을 구분하고 각 구분별 주문재와 여재 비율 계산해줘",
    "answer": "WITH monthly_data AS (SELECT ITEM_ACCOUNT, ORD_TYPE, COUNT(*) AS total_count FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD IN (DATE '2025-01-31', DATE '2025-02-28') AND TYPE = '재공' GROUP BY ITEM_ACCOUNT,ORD_TYPE), total_data AS (SELECT ITEM_ACCOUNT, SUM(total_count) AS total_count FROM monthly_data GROUP BY ITEM_ACCOUNT)SELECT m.ITEM_ACCOUNT, SUM(CASE WHEN m.ORD_TYPE = '주문재' THEN m.total_count ELSE 0 END) AS order_count, SUM(CASE WHEN m.ORD_TYPE = '여재' THEN m.total_count ELSE 0 END) AS stock_count, SAFE_DIVIDE(SUM(CASE WHEN m.ORD_TYPE = '주문재' THEN m.total_count ELSE 0 END), t.total_count) AS order_ratio, SAFE_DIVIDE(SUM(CASE WHEN m.ORD_TYPE = '여재' THEN m.total_count ELSE 0 END), t.total_count) AS stock_ratioFROM monthly_data mJOIN total_data t ON m.ITEM_ACCOUNT = t.ITEM_ACCOUNTGROUP BY m.ITEM_ACCOUNT, t.total_count;"
  },
  {
    "question": "2025년 2월 기준 제품 재고 금액과 중량, 그리고 전월 대비 증감액은 얼마인가?",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '제품' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '제품' GROUP BY TYPE)SELECT COALESCE(c.TYPE, p.TYPE) AS TYPE, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(p.total_weight, 0) AS previous_weight, (COALESCE(c.total_weight, 0) - COALESCE(p.total_weight, 0)) AS weight_change, COALESCE(c.total_amount, 0) AS current_amount, COALESCE(p.total_amount, 0) AS previous_amount, (COALESCE(c.total_amount, 0) - COALESCE(p.total_amount, 0)) AS amount_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "2025년 2월에 제품의 재고 금액과 중량은 얼마이며, 전월 대비 얼마나 증가하거나 감소했는지 알려주세요.",
    "answer": "WITH current_product_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '제품' GROUP BY TYPE), previous_product_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '제품' GROUP BY TYPE)SELECT c.TYPE, c.total_weight, c.total_amount, (c.total_weight - COALESCE(p.total_weight, 0)) AS weight_change, (c.total_amount - COALESCE(p.total_amount, 0)) AS amount_changeFROM current_product_data cLEFT JOIN previous_product_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "25년 2월과 24년 12월의 재고자산 금액 차이를 알려주세요",
    "answer": "WITH previous_month_data AS (SELECT '제품' AS category, SUM(AMT) AS previous_amt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' UNION ALL SELECT '재공' AS category, SUM(AMT) AS previous_amt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' UNION ALL SELECT '원재료' AS category, SUM(AMT) AS previous_amt FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2024-12-31'), current_month_data AS (SELECT '제품' AS category, SUM(AMT) AS current_amt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' UNION ALL SELECT '재공' AS category, SUM(AMT) AS current_amt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' UNION ALL SELECT '원재료' AS category, SUM(AMT) AS current_amt FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28')SELECT c.category, (c.current_amt - COALESCE(p.previous_amt, 0)) AS amt_differenceFROM current_month_data cLEFT JOIN previous_month_data p ON c.category = p.category;"
  },
  {
    "question": "2025년 2월 기준 R-order 재고별 중량 및 전월 대비 증감은?",
    "answer": "WITH current_month AS ( SELECT GBN_NAME, ITEM_ACCOUNT, TYPE, SUM(WGT) as current_month_wgt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-02-28' AND R_ORDER = 'Y' GROUP BY GBN_NAME, ITEM_ACCOUNT, TYPE ), previous_month AS ( SELECT GBN_NAME, ITEM_ACCOUNT, TYPE, SUM(WGT) as previous_month_wgt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-01-31' AND R_ORDER = 'Y' GROUP BY GBN_NAME, ITEM_ACCOUNT, TYPE ) SELECT COALESCE(cm.GBN_NAME, pm.GBN_NAME) as GBN_NAME, COALESCE(cm.ITEM_ACCOUNT, pm.ITEM_ACCOUNT) as ITEM_ACCOUNT, COALESCE(cm.TYPE, pm.TYPE) as TYPE, cm.current_month_wgt as feb_wgt, pm.previous_month_wgt as jan_wgt, COALESCE(cm.current_month_wgt, 0) - COALESCE(pm.previous_month_wgt, 0) as weight_change, CASE WHEN COALESCE(pm.previous_month_wgt, 0) = 0 THEN NULL ELSE ROUND((COALESCE(cm.current_month_wgt, 0) - pm.previous_month_wgt) / pm.previous_month_wgt * 100, 2) END as change_percentage FROM current_month cm FULL OUTER JOIN previous_month pm ON cm.GBN_NAME = pm.GBN_NAME AND cm.ITEM_ACCOUNT = pm.ITEM_ACCOUNT AND cm.TYPE = pm.TYPE ORDER BY GBN_NAME, ITEM_ACCOUNT, TYPE"
  },
  {
    "question": "2025년 1월, 2월 재공 재고의 소재성 제품성을 구분하고 각 구분별 주문재와 여재 비율 계산해줘",
    "answer": "WITH wip_data AS ( SELECT BASE_YMD, ITEM_ACCOUNT, ORD_TYPE, SUM(WGT) AS total_wgt FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD IN ('2025-01-31', '2025-02-28') AND TYPE = '재공' AND ITEM_ACCOUNT IN ('제품', '소재') AND ORD_TYPE IN ('주문재', '여재') GROUP BY BASE_YMD, ITEM_ACCOUNT, ORD_TYPE ), total_by_account_date AS ( SELECT BASE_YMD, ITEM_ACCOUNT, SUM(total_wgt) AS account_total_wgt FROM wip_data GROUP BY BASE_YMD, ITEM_ACCOUNT ) SELECT w.BASE_YMD, w.ITEM_ACCOUNT, w.ORD_TYPE, w.total_wgt, t.account_total_wgt, ROUND(w.total_wgt / t.account_total_wgt * 100, 2) AS percentage FROM wip_data w JOIN total_by_account_date t ON w.BASE_YMD = t.BASE_YMD AND w.ITEM_ACCOUNT = t.ITEM_ACCOUNT ORDER BY w.BASE_YMD, w.ITEM_ACCOUNT, w.ORD_TYPE"
  },
  {
    "question": "2025년 2월 기준 R-order 재고별 중량 및 전월 대비 증감은?",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND R_ORDER = 'Y' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND R_ORDER = 'Y' GROUP BY TYPE)SELECT COALESCE(c.TYPE, p.TYPE) AS TYPE, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(p.total_weight, 0) AS previous_weight, (COALESCE(c.total_weight, 0) - COALESCE(p.total_weight, 0)) AS weight_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "이번 달과 작년 말 제품, 재공 재고 중량과 금액 차이를 알려줘",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-05-31' GROUP BY TYPE), last_year_end_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' GROUP BY TYPE)SELECT COALESCE(c.TYPE, l.TYPE) AS TYPE, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(c.total_amount, 0) AS current_amount, COALESCE(l.total_weight, 0) AS last_year_weight, COALESCE(l.total_amount, 0) AS last_year_amount, (COALESCE(c.total_weight, 0) - COALESCE(l.total_weight, 0)) AS weight_difference, (COALESCE(c.total_amount, 0) - COALESCE(l.total_amount, 0)) AS amount_differenceFROM current_month_data cFULL OUTER JOIN last_year_end_data l ON c.TYPE = l.TYPE;"
  },
  {
    "question": "2025년 2월 기준 재공 재고 금액과 중량, 그리고 전월 대비 증감액은 얼마인가?",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '재공' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '재공' GROUP BY TYPE)SELECT COALESCE(c.TYPE, p.TYPE) AS TYPE, COALESCE(c.total_weight, 0) AS current_weight, COALESCE(c.total_amount, 0) AS current_amount, COALESCE(p.total_weight, 0) AS previous_weight, COALESCE(p.total_amount, 0) AS previous_amount, (COALESCE(c.total_weight, 0) - COALESCE(p.total_weight, 0)) AS weight_change, (COALESCE(c.total_amount, 0) - COALESCE(p.total_amount, 0)) AS amount_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPE;"
  },
  {
    "question": "2025년 2월 합금철, 자가철스크랩, 구입스크랩 중량과 전월 대비 증감은?",
    "answer": "WITH current_month AS (SELECT GBN_L1, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND GBN_L1 IN ('합금철', '자가철', '구입 스크랩') GROUP BY GBN_L1), previous_month AS (SELECT GBN_L1, SUM(WGT) AS total_weight FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND GBN_L1 IN ('합금철', '자가철', '구입 스크랩') GROUP BY GBN_L1)SELECT cm.GBN_L1, cm.total_weight AS current_weight, COALESCE(pm.total_weight, 0) AS previous_weight, cm.total_weight - COALESCE(pm.total_weight, 0) AS weight_changeFROM current_month cmLEFT JOIN previous_month pm ON cm.GBN_L1 = pm.GBN_L1ORDER BY cm.GBN_L1;"
  },
  {
    "question": "2025년 2월 재공 재고의 소재성과 제품성 구분별 중량과 전월 대비 증감 보여줘",
    "answer": "WITH current_month AS ( SELECT GBN_NAME, SUM(WGT) AS current_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-02-28' AND TYPE = '재공' GROUP BY GBN_NAME ), previous_month AS ( SELECT GBN_NAME, SUM(WGT) AS previous_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-01-31' AND TYPE = '재공' GROUP BY GBN_NAME ) SELECT c.GBN_NAME AS category, c.current_weight AS weight_feb, p.previous_weight AS weight_jan, c.current_weight - p.previous_weight AS weight_change FROM current_month c LEFT JOIN previous_month p ON c.GBN_NAME = p.GBN_NAME ORDER BY c.GBN_NAME"
  },
  {
    "question": "2025년 2월을 기준으로 한 재공 재고의 금액과 중량, 그리고 전월 대비 변화량은 무엇인가요?",
    "answer": "WITH monthly_data AS (SELECT SUM(AMT) AS total_amount, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND TYPE = '재공'), previous_month_data AS (SELECT SUM(AMT) AS total_amount, SUM(WGT) AS total_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND TYPE = '재공')SELECT m.total_amount, m.total_weight, (m.total_amount - COALESCE(p.total_amount, 0)) AS amount_change, (m.total_weight - COALESCE(p.total_weight, 0)) AS weight_changeFROM monthly_data mLEFT JOIN previous_month_data p ON TRUE;"
  },
  {
    "question": "2025년 2월 기준 W-order 재고의 제품, 재공별 총 중량과 금액 및 전월 대비 증감은?",
    "answer": "WITH monthly_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND PREQ_NO LIKE 'W%' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(WGT) AS total_weight, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND PREQ_NO LIKE 'W%' GROUP BY TYPE)SELECT m.TYPE, m.total_weight, m.total_amount, (m.total_weight - COALESCE(p.total_weight, 0)) AS weight_change, (m.total_amount - COALESCE(p.total_amount, 0)) AS amount_changeFROM monthly_data mLEFT JOIN previous_month_data p ON m.TYPE = p.TYPE;"
  },
  {
    "question": "2025년 2월 기준 제품, 재공, 원료 재고 금액과 중량, 그리고 전월 대비 증감액은 얼마인가?",
    "answer": "WITH current_month AS ( SELECT BASE_YMD, TYPE, SUM(AMT) AS AMT, SUM(WGT) AS WGT FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-02-28' AND TYPE IN ('제품', '재공') GROUP BY BASE_YMD, TYPE UNION ALL SELECT BASE_YMD, '원료' AS TYPE, SUM(AMT) AS AMT, SUM(WGT) AS WGT FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = '2025-02-28' GROUP BY BASE_YMD ), previous_month AS ( SELECT BASE_YMD, TYPE, SUM(AMT) AS AMT, SUM(WGT) AS WGT FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-01-31' AND TYPE IN ('제품', '재공') GROUP BY BASE_YMD, TYPE UNION ALL SELECT BASE_YMD, '원료' AS TYPE, SUM(AMT) AS AMT, SUM(WGT) AS WGT FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = '2025-01-31' GROUP BY BASE_YMD ) SELECT cm.TYPE, cm.AMT AS CURRENT_AMT, cm.WGT AS CURRENT_WGT, pm.AMT AS PREVIOUS_AMT, pm.WGT AS PREVIOUS_WGT, (cm.AMT - pm.AMT) AS AMT_CHANGE, (cm.WGT - pm.WGT) AS WGT_CHANGE FROM current_month cm JOIN previous_month pm ON cm.TYPE = pm.TYPE"
  },
  {
    "question": "24년 12월 대비 25년 2월의 재고 각각의 금액이 몇 원에서 몇 원으로 얼마나 줄었어? 제품, 재공, 원료 별로 증감을 보여줘",
    "answer": "WITH product_wip_feb AS (SELECT TYPE, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' GROUP BY TYPE), product_wip_dec AS (SELECT TYPE, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' GROUP BY TYPE), raw_material_feb AS (SELECT '원료' AS TYPE, SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28'), raw_material_dec AS (SELECT '원료' AS TYPE, SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2024-12-31')SELECT COALESCE(feb.TYPE, dec.TYPE) AS TYPE, COALESCE(feb.total_amount, 0) AS amount_feb, COALESCE(dec.total_amount, 0) AS amount_dec, (COALESCE(feb.total_amount, 0) - COALESCE(dec.total_amount, 0)) AS amount_changeFROM (SELECT * FROM product_wip_feb UNION ALL SELECT * FROM raw_material_feb) febFULL OUTER JOIN (SELECT * FROM product_wip_dec UNION ALL SELECT * FROM raw_material_dec) dec ON feb.TYPE = dec.TYPEORDER BY TYPE;"
  },
  {
    "question": "24년 12월 대비 25년 2월의 재고 각각의 금액이 몇 원에서 몇 원으로 얼마나 줄었어? 제품, 재공, 원료 별로 증감을 보여줘",
    "answer": "WITH current_month_data AS (SELECT TYPE, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' GROUP BY TYPE), previous_month_data AS (SELECT TYPE, SUM(AMT) AS total_amount FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2024-12-31' GROUP BY TYPE), current_raw AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2025-02-28'), previous_raw AS (SELECT SUM(AMT) AS total_amount FROM css_daquv.POC_RAW_MATERIAL_MONTHLY WHERE BASE_YMD = DATE '2024-12-31')SELECT COALESCE(c.TYPE, '원료') AS TYPE, COALESCE(c.total_amount, 0) AS current_amount, COALESCE(p.total_amount, 0) AS previous_amount, (COALESCE(c.total_amount, 0) - COALESCE(p.total_amount, 0)) AS amount_changeFROM current_month_data cFULL OUTER JOIN previous_month_data p ON c.TYPE = p.TYPEUNION ALLSELECT '원료' AS TYPE, current_raw.total_amount AS current_amount, previous_raw.total_amount AS previous_amount, (current_raw.total_amount - previous_raw.total_amount) AS amount_changeFROM current_raw, previous_raw;"
  },
  {
    "question": "2025년 2월 기준 SPX 관련 재고의 톤수와 전월 대비 증감은?",
    "answer": "WITH monthly_data AS (SELECT BASE_YMD, SUM(WGT) / POWER(10, 3) AS total_weight_ton FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-02-28' AND REAL_CUST_NM IN ('Space X', 'Ram Alloys', 'SPHERE POWER INC.', 'United Performance Metals') GROUP BY BASE_YMD), previous_month_data AS (SELECT SUM(WGT) / POWER(10, 3) AS total_weight_ton FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = DATE '2025-01-31' AND REAL_CUST_NM IN ('Space X', 'Ram Alloys', 'SPHERE POWER INC.', 'United Performance Metals'))SELECT md.BASE_YMD, md.total_weight_ton, md.total_weight_ton - pm.total_weight_ton AS weight_changeFROM monthly_data mdJOIN previous_month_data pm ON TRUE;"
  },
  {
    "question": "2025년 2월 기준 W-order 재고의 제품, 재공별 총 중량과 금액 및 전월 대비 증감은?",
    "answer": "WITH feb_data AS ( SELECT TYPE, SUM(WGT) AS feb_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-02-28' AND PREQ_NO LIKE 'W%' GROUP BY TYPE ), jan_data AS ( SELECT TYPE, SUM(WGT) AS jan_weight FROM css_daquv.POC_PRODUCT_WIP_MONTHLY WHERE BASE_YMD = '2025-01-31' AND PREQ_NO LIKE 'W%' GROUP BY TYPE ) SELECT f.TYPE AS product_type, f.feb_weight AS february_weight, j.jan_weight AS january_weight, (f.feb_weight - COALESCE(j.jan_weight, 0)) AS weight_change FROM feb_data f LEFT JOIN jan_data j ON f.TYPE = j.TYPE ORDER BY f.TYPE"
  }
]