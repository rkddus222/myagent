question,answer,converted_question,일치여부,의견
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND reg_dt = '20240505'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240505""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하고 있습니다. 변환된 SQL에서 사용된 바인딩 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('대출', 'KRW', '20240505')과 같은 역할을 하므로, 결과적으로 두 쿼리는 동일한 동작을 수행합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_dv LIKE '%kdb뉴딜%' AND reg_dt = '20240818'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""%kdb뉴딜%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240818""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, acct_dv, reg_dt)을 사용하여 데이터를 선택하고 있으며, 선택하는 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, curr_cd, deposit_foreign, total_appr_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND reg_dt = '20240520' and curr_cd <> 'KRW'","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""deposit_foreign"",""total_appr_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240520""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 열도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, curr_cd, deposit_foreign, total_appr_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND reg_dt = '20240919' and curr_cd <> 'KRW'","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""deposit_foreign"",""total_appr_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240919""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼과 테이블 이름도 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, curr_cd, deposit_foreign, total_appr_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND reg_dt = '20240513' and curr_cd <> 'KRW'","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""deposit_foreign"",""total_appr_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240513""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 필드 선택 및 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '신한은행' AND acct_bal_amt <> 0 AND reg_dt = '20240630'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""신한은행""},{""column"":""acct_bal_amt"",""op"":""ne"",""value"":0},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240630""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm = :bank_nm_1 AND aicfo_get_all_amt.acct_bal_amt != :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_bal_amt <> 0 AND reg_dt = '20240812'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""ne"",""value"":0},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240812""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt != :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼과 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, curr_cd, deposit_foreign, total_appr_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'USD' AND reg_dt = '20250515'","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""deposit_foreign"",""total_appr_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""USD""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250515""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('증권', 'USD', '20250515')과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, curr_cd, deposit_foreign, total_appr_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'USD' AND reg_dt = '20240927'","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""deposit_foreign"",""total_appr_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""USD""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240927""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하여 동일한 컬럼을 선택하고 있으며, SQLAlchemy에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 하드코딩된 값('증권', 'USD', '20240927')과 동일한 의미를 가지므로 결과가 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '구)외환은행' AND reg_dt = '20240827'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""구)외환은행""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240827""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm = :bank_nm_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '구)외환은행' AND reg_dt = '20250915'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""구)외환은행""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250915""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm = :bank_nm_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, bank_nm, reg_dt)을 사용하여 동일한 컬럼(bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm)을 선택하고 있습니다. 변환된 SQL에서는 바인드 변수를 사용하고 있지만, 이는 쿼리의 동작에 영향을 미치지 않으므로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '기업은행' AND acct_bal_amt = 0 AND reg_dt = '20241016'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""기업은행""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":0},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241016""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm = :bank_nm_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가집니다. 따라서 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_bal_amt = 0 AND reg_dt = '20240921'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":0},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240921""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_bal_amt = 0 AND reg_dt = '20250630'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":0},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250630""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, acct_bal_amt, reg_dt)을 사용하여 동일한 컬럼(bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm)을 선택하고 있으므로 같은 동작을 합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_bal_amt = 0 AND reg_dt = '20250213'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":0},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250213""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 조회하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND bank_nm = '삼성증권' AND reg_dt = '20240821'","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""삼성증권""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240821""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm = :bank_nm_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 동일한 테이블에서 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 같은 동작을 합니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240817' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240817""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 `COUNT(*)`를 사용하려고 했지만, SQLAlchemy에서 `*`를 사용할 수 없어서 오류가 발생했습니다. 따라서 두 쿼리는 동일한 동작을 하지 않습니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20241020' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241020""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 ""COUNT(*)""를 사용하려고 했지만, SQLAlchemy에서 '*'를 사용할 수 없다는 오류가 발생했습니다. 이는 원본 SQL과 변환된 SQL의 동작이 일치하지 않음을 나타냅니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND reg_dt = '20240905' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240905""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 `COUNT(*)`를 사용하려고 했지만, SQLAlchemy에서 `*`를 사용할 수 없다는 오류가 발생했습니다. 이는 원본 SQL과 변환된 SQL이 동일한 동작을 하지 않음을 나타냅니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240802' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240802""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 `COUNT(*)`를 사용하려고 했지만, SQLAlchemy에서 `*`를 사용할 수 없어서 오류가 발생했습니다. 따라서 두 쿼리는 동일한 동작을 하지 않습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240131'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240131""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20240131')과 동일한 역할을 하므로, 두 쿼리는 같은 동작을 수행합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240308'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240308""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20240308')과 동일한 역할을 하므로, 결과적으로 두 쿼리는 같은 동작을 수행합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240405'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240405""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20240405')과 동일한 역할을 하므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, COUNT(acct_no) AS account_count FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20241001' GROUP BY bank_nm ORDER BY account_count DESC","{""select"":[""bank_nm"",{""func"":""count"",""column"":""acct_no"",""label"":""account_count""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241001""}],""group_by"":[""bank_nm""],""order_by"":[{""column"":""account_count"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, count(aicfo_get_all_amt.acct_no) AS account_count 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm ORDER BY NULL DESC",아니오,"변환된 SQL 쿼리에서 `ORDER BY NULL DESC`는 원본 SQL의 `ORDER BY account_count DESC`와 다릅니다. 원본 쿼리는 `account_count`를 기준으로 정렬하지만, 변환된 쿼리는 정렬 기준이 없으므로 결과가 다를 수 있습니다."
"SELECT bank_nm, COUNT(acct_no) AS account_count FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20241110' GROUP BY bank_nm ORDER BY account_count DESC","{""select"":[""bank_nm"",{""func"":""count"",""column"":""acct_no"",""label"":""account_count""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241110""}],""group_by"":[""bank_nm""],""order_by"":[{""column"":""account_count"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, count(aicfo_get_all_amt.acct_no) AS account_count 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm ORDER BY NULL DESC",아니오,"변환된 SQL 쿼리에서 `ORDER BY NULL DESC`는 원본 SQL의 `ORDER BY account_count DESC`와 다릅니다. 원본 쿼리는 `account_count`를 기준으로 내림차순 정렬하지만, 변환된 쿼리는 정렬 기준이 없으므로 결과가 다를 수 있습니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '우리은행' AND reg_dt = '20240619' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""우리은행""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240619""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 ""COUNT(*)""를 사용하려고 했지만, SQLAlchemy에서 ""Column '*'""를 찾을 수 없다는 오류가 발생했습니다. 이는 원본 SQL의 의도와 다르게 동작하고 있음을 나타냅니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '국민은행' AND reg_dt = '20240928' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""국민은행""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240928""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 COUNT(*)를 사용하려고 했지만, '*'가 AccountAmount 테이블에 존재하지 않아 오류가 발생했습니다. 원본 SQL은 정상적으로 작동하지만 변환된 SQL은 오류로 인해 실행되지 않습니다."
"SELECT bank_nm, acct_no, acct_dv, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND acct_bal_amt BETWEEN (1 * POWER(10, 11) * 0.9) AND (1 * POWER(10, 11) * 1.1) AND reg_dt = '20251101'","{""select"":[""bank_nm"",""acct_no"",""acct_dv"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[90000000000,110000000000]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20251101""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절의 컬럼과 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 수행합니다."
"SELECT bank_nm, acct_no, curr_cd, acct_bal_amt, acct_dv, total_prchs_amt, total_appr_amt, return_rate, deposit_foreign, acct_bal_amt, deposit_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20251101' AND acct_bal_amt BETWEEN (7 * POWER(10, 11)) AND ((7 + 1) * POWER(10, 11) - 1)","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""acct_bal_amt"",""acct_dv"",""total_prchs_amt"",""total_appr_amt"",""return_rate"",""deposit_foreign"",""acct_bal_amt"",""deposit_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20251101""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[700000000000,799999999999]}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.total_prchs_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.return_rate, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.acct_bal_amt AS acct_bal_amt__1, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼도 일치합니다. SQLAlchemy 변환 후 쿼리에서 사용된 바인드 변수는 원본 쿼리의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, curr_cd, acct_bal_amt, acct_dv, total_prchs_amt, total_appr_amt, return_rate, deposit_foreign, acct_bal_amt, deposit_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20251105' AND acct_bal_amt BETWEEN (8 * POWER(10, 9) * 0.9) AND (8 * POWER(10, 9) * 1.1)","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""acct_bal_amt"",""acct_dv"",""total_prchs_amt"",""total_appr_amt"",""return_rate"",""deposit_foreign"",""acct_bal_amt"",""deposit_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20251105""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[7200000000,8800000000]}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.total_prchs_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.return_rate, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.acct_bal_amt AS acct_bal_amt__1, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2",예,"두 쿼리는 동일한 조건과 필드를 사용하여 데이터를 조회하고 있으며, SQLAlchemy에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가집니다. 따라서 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, curr_cd, acct_bal_amt, acct_dv, total_prchs_amt, total_appr_amt, return_rate, deposit_foreign, acct_bal_amt, deposit_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20251105' AND acct_bal_amt BETWEEN (8 * POWER(10, 9) * 0.9) AND (8 * POWER(10, 9) * 1.1)","{""select"":[""bank_nm"",""acct_no"",""curr_cd"",""acct_bal_amt"",""acct_dv"",""total_prchs_amt"",""total_appr_amt"",""return_rate"",""deposit_foreign"",""acct_bal_amt"",""deposit_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20251105""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[7200000000,8800000000]}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.total_prchs_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.return_rate, aicfo_get_all_amt.deposit_foreign, aicfo_get_all_amt.acct_bal_amt AS acct_bal_amt__1, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2",예,"두 쿼리는 동일한 조건을 사용하여 동일한 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. SQLAlchemy에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 동일하게 나옵니다."
"SELECT bank_nm, acct_no, acct_dv, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND acct_bal_amt BETWEEN (5 * POWER(10, 10)) AND ((5 + 1) * POWER(10, 10) - 1) AND reg_dt = '20250202'","{""select"":[""bank_nm"",""acct_no"",""acct_dv"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[50000000000,59999999999]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250202""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼과 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나올 것입니다."
"SELECT bank_nm, acct_no, acct_dv, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND acct_bal_amt BETWEEN (5 * POWER(10, 10)) AND ((5 + 1) * POWER(10, 10) - 1) AND reg_dt = '20250202'","{""select"":[""bank_nm"",""acct_no"",""acct_dv"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[50000000000,59999999999]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250202""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절의 필드와 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND acct_no LIKE '%2105%' AND reg_dt = '20241219'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_no"",""op"":""like"",""value"":""%2105%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241219""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 조건을 나타내므로 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND acct_no LIKE '%4651%' AND reg_dt = '20240909'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_no"",""op"":""like"",""value"":""%4651%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240909""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 조건을 사용하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, curr_cd, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND acct_no LIKE '%4415%' AND reg_dt = '20241016'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""curr_cd"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""acct_no"",""op"":""like"",""value"":""%4415%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241016""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절의 컬럼과 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, curr_cd, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND reg_dt = '20241109' AND acct_bal_amt <> 0","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""curr_cd"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241109""},{""column"":""acct_bal_amt"",""op"":""ne"",""value"":0}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt != :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20241023' AND acct_bal_amt <> 0","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241023""},{""column"":""acct_bal_amt"",""op"":""ne"",""value"":0}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt != :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼과 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나올 것입니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_no LIKE '%100037340220%' AND reg_dt = '20241023'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_no"",""op"":""like"",""value"":""%100037340220%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241023""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 컬럼을 참조하며, 동일한 조건을 사용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND acct_no LIKE '%28491002652105%' AND reg_dt = '20240915'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_no"",""op"":""like"",""value"":""%28491002652105%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240915""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, acct_no, reg_dt)을 사용하여 동일한 컬럼을 선택하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 일치하는 조건을 나타내므로 동작이 동일합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20250205' AND acct_bal_amt >= POWER(10,8)","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250205""},{""column"":""acct_bal_amt"",""op"":""ge"",""value"":100000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt >= :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 조회하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20240722' AND acct_bal_amt >= POWER(10,8)","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240722""},{""column"":""acct_bal_amt"",""op"":""ge"",""value"":100000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt >= :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240706' AND acct_bal_amt >= POWER(10,8)","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240706""},{""column"":""acct_bal_amt"",""op"":""ge"",""value"":100000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt >= :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절에서 선택하는 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20241202'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241202""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('예적금', 'KRW', '20241202')과 동일한 역할을 하므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND reg_dt = '20240715'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240715""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, curr_cd, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND reg_dt = '20240707'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""curr_cd"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240707""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 같은 데이터를 선택하고 있으며, SQLAlchemy에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240225'","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240225""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('증권', 'KRW', '20240225')과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, COUNT(acct_no) AS account_count FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20250122' GROUP BY bank_nm ORDER BY account_count DESC","{""select"":[""bank_nm"",{""func"":""count"",""column"":""acct_no"",""label"":""account_count""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250122""}],""group_by"":[""bank_nm""],""order_by"":[{""column"":""account_count"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, count(aicfo_get_all_amt.acct_no) AS account_count 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm ORDER BY NULL DESC",아니오,"변환된 SQL에서 `ORDER BY NULL DESC`는 원본 SQL의 `ORDER BY account_count DESC`와 다릅니다. 원본 SQL은 `account_count`를 기준으로 정렬하지만, 변환된 SQL은 정렬 기준이 없거나 무시됩니다. 따라서 두 쿼리는 동일한 동작을 하지 않습니다."
"SELECT bank_nm, COUNT(acct_no) AS account_count FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240815' GROUP BY bank_nm ORDER BY account_count DESC","{""select"":[""bank_nm"",{""func"":""count"",""column"":""acct_no"",""label"":""account_count""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240815""}],""group_by"":[""bank_nm""],""order_by"":[{""column"":""account_count"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, count(aicfo_get_all_amt.acct_no) AS account_count 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm ORDER BY NULL DESC",아니오,"변환된 SQL 쿼리에서 `ORDER BY NULL DESC`는 원본 SQL의 `ORDER BY account_count DESC`와 다릅니다. 원본 쿼리는 `account_count`를 기준으로 정렬하지만, 변환된 쿼리는 정렬 기준이 없거나 NULL로 설정되어 있어 결과가 다르게 나올 수 있습니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240917' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240917""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건을 사용하여 `bank_nm`별로 `acct_bal_amt`의 합계를 계산하고 있으며, WHERE 절의 조건과 GROUP BY 절이 동일하게 유지되고 있습니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일합니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20241012' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241012""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건을 사용하여 `bank_nm`별로 `acct_bal_amt`의 합계를 계산하고 있으며, WHERE 절의 조건과 GROUP BY 절의 내용이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일합니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20241223' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241223""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건을 사용하여 `bank_nm`별로 `acct_bal_amt`의 합계를 계산하고 있으며, WHERE 절의 조건과 GROUP BY 절이 동일하게 유지되고 있습니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20240123'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240123""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인딩 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('예적금', 'KRW', '20240123')과 동일한 역할을 하므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND bank_nm = '하나은행' AND reg_dt = '20240723' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""하나은행""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240723""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 ""COUNT(*)""를 사용하기 위해서는 해당 테이블에서 모든 행을 카운트할 수 있는 방법이 필요하지만, ""Column '*' not found in AccountAmount""라는 오류가 발생하여 원본 SQL과 동일한 동작을 하지 않습니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND bank_nm = '삼성증권' AND reg_dt = '20241012' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""삼성증권""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241012""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 COUNT(*)를 사용하려고 했지만, SQLAlchemy에서 '*'를 찾을 수 없다는 오류가 발생했습니다. 이는 원본 SQL의 COUNT(*)와 변환된 SQL의 집계 함수 사용 방식이 일치하지 않음을 나타냅니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20240123' ORDER BY acct_bal_amt DESC","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240123""}],""order_by"":[{""column"":""acct_bal_amt"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 ORDER BY aicfo_get_all_amt.acct_bal_amt DESC",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, reg_dt)으로 데이터를 조회하고 있으며, 선택된 컬럼과 정렬 기준도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('예적금', 'KRW', '20240123')과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND reg_dt = '20240202' ORDER BY acct_bal_amt DESC","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240202""}],""order_by"":[{""column"":""acct_bal_amt"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 ORDER BY aicfo_get_all_amt.acct_bal_amt DESC",예,"두 쿼리는 동일한 테이블과 조건을 사용하고 있으며, 선택된 컬럼과 정렬 기준도 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, curr_cd, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND reg_dt = '20240723' ORDER BY acct_bal_amt DESC","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""curr_cd"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240723""}],""order_by"":[{""column"":""acct_bal_amt"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 ORDER BY aicfo_get_all_amt.acct_bal_amt DESC",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고, 동일한 컬럼을 선택하며, 동일한 정렬 기준을 적용하고 있습니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240516' ORDER BY acct_bal_amt DESC","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240516""}],""order_by"":[{""column"":""acct_bal_amt"",""direction"":""desc""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 ORDER BY aicfo_get_all_amt.acct_bal_amt DESC",예,"두 쿼리는 동일한 테이블과 조건을 사용하고 있으며, 선택된 컬럼과 정렬 기준도 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240630'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240630""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20240630')과 동일한 값을 가리키면 동일한 결과를 반환합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_bal_amt >= 10000000 AND reg_dt = '20240123'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""ge"",""value"":10000000},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240123""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt >= :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, acct_bal_amt, reg_dt)을 사용하여 동일한 컬럼(bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm)을 선택하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 조건을 나타내므로 동작이 일치합니다."
"SELECT view_dv, bank_nm, curr_cd, COUNT(*) AS acct_cnt FROM aicfo_get_all_amt WHERE reg_dt = '20240318' GROUP BY view_dv, bank_nm, curr_cd","{""select"":[""view_dv"",""bank_nm"",""curr_cd"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""}],""where"":[{""column"":""reg_dt"",""op"":""eq"",""value"":""20240318""}],""group_by"":[""view_dv"",""bank_nm"",""curr_cd""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 COUNT(*)를 사용하려고 했지만, SQLAlchemy에서 '*'를 사용할 수 없어서 오류가 발생했습니다. 원본 SQL과 변환된 SQL이 동일한 결과를 생성하지 않기 때문에 두 쿼리는 일치하지 않습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240123' AND acct_bal_amt >= POWER(10,8)","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240123""},{""column"":""acct_bal_amt"",""op"":""ge"",""value"":100000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt >= :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 조회하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_dv LIKE '%월급%' AND reg_dt = '20250218'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""%월급%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가집니다. 따라서 두 쿼리는 같은 동작을 합니다."
"SELECT view_dv, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '예적금') AND curr_cd = 'KRW' AND reg_dt = '20240822' GROUP BY view_dv","{""select"":[""view_dv"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""예적금""]},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240822""}],""group_by"":[""view_dv""]}","SELECT aicfo_get_all_amt.view_dv, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`에 따라 그룹화하고 `acct_bal_amt`의 합계를 계산합니다. 변환된 SQL에서 사용된 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20250218' AND real_amt >= POWER(10,10)","{""select"":[""bank_nm"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""},{""column"":""real_amt"",""op"":""ge"",""value"":10000000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.real_amt >= :real_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :real_amt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20250218', POWER(10,10))과 동일한 의미를 가지므로, 결과가 동일하게 나옵니다."
"SELECT view_dv, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '예적금') AND curr_cd = 'KRW' AND reg_dt = '20240822' GROUP BY view_dv","{""select"":[""view_dv"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""예적금""]},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240822""}],""group_by"":[""view_dv""]}","SELECT aicfo_get_all_amt.view_dv, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`에 따라 그룹화하고 `acct_bal_amt`의 합계를 계산합니다. 변환된 SQL에서 사용된 변수들은 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_dv LIKE '%월급%' AND reg_dt = '20241220'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""%월급%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241220""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가집니다. 따라서 두 쿼리는 같은 동작을 합니다."
"SELECT view_dv, bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '예적금', '대출', '증권') AND curr_cd = 'KRW' AND reg_dt = '20241220'","{""select"":[""view_dv"",""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""예적금"",""대출"",""증권""]},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241220""}]}","SELECT aicfo_get_all_amt.view_dv, aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼과 테이블 이름이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND acct_dv LIKE 'ELS%' AND reg_dt = '20250218'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""ELS%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND acct_dv LIKE 'DLS%' AND reg_dt = '20250218'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""DLS%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 필드를 참조하며, 동일한 조건을 사용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT view_dv, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '대출') AND curr_cd = 'KRW' AND reg_dt = '20221215' GROUP BY view_dv","{""select"":[""view_dv"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""대출""]},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20221215""}],""group_by"":[""view_dv""]}","SELECT aicfo_get_all_amt.view_dv, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`와 `acct_bal_amt`의 합계를 계산하고 있으며, `GROUP BY` 절도 동일하게 적용되고 있습니다. 변환된 SQL에서 사용된 변수들은 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT view_dv, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '예적금') AND curr_cd = 'KRW' AND reg_dt = '20231021' GROUP BY view_dv","{""select"":[""view_dv"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""예적금""]},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20231021""}],""group_by"":[""view_dv""]}","SELECT aicfo_get_all_amt.view_dv, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`에 따라 그룹화하고 `acct_bal_amt`의 합계를 계산합니다. 변환된 SQL에서 사용된 변수들은 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT view_dv, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '증권') AND curr_cd = 'KRW' AND reg_dt = '20220220' GROUP BY view_dv","{""select"":[""view_dv"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""증권""]},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20220220""}],""group_by"":[""view_dv""]}","SELECT aicfo_get_all_amt.view_dv, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`에 따라 그룹화하고 `acct_bal_amt`의 합계를 계산합니다. 변환된 SQL에서 사용된 매개변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT view_dv, curr_cd, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('수시', '증권') AND curr_cd <> 'KRW' AND reg_dt = '20240206' GROUP BY view_dv, curr_cd","{""select"":[""view_dv"",""curr_cd"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""수시"",""증권""]},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240206""}],""group_by"":[""view_dv"",""curr_cd""]}","SELECT aicfo_get_all_amt.view_dv, aicfo_get_all_amt.curr_cd, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv, aicfo_get_all_amt.curr_cd",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`, `curr_cd`에 따라 `acct_bal_amt`의 합계를 계산하고 있으며, 그룹화 및 필터링 조건이 일치합니다. 변환된 SQL에서 사용된 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과는 동일합니다."
"SELECT view_dv, curr_cd, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('대출', '증권') AND curr_cd <> 'KRW' AND reg_dt = '20240324' GROUP BY view_dv, curr_cd","{""select"":[""view_dv"",""curr_cd"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""대출"",""증권""]},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240324""}],""group_by"":[""view_dv"",""curr_cd""]}","SELECT aicfo_get_all_amt.view_dv, aicfo_get_all_amt.curr_cd, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv, aicfo_get_all_amt.curr_cd",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고, 동일한 컬럼을 그룹화하여 합계를 계산하고 있습니다. 변환된 SQL에서 사용된 변수와 원본 SQL의 상수 값은 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT view_dv, curr_cd, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv IN ('예적금', '증권') AND curr_cd <> 'KRW' AND reg_dt = '20241224' GROUP BY view_dv, curr_cd","{""select"":[""view_dv"",""curr_cd"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""in"",""value"":[""예적금"",""증권""]},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241224""}],""group_by"":[""view_dv"",""curr_cd""]}","SELECT aicfo_get_all_amt.view_dv, aicfo_get_all_amt.curr_cd, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv IN (__[POSTCOMPILE_view_dv_1]) AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.view_dv, aicfo_get_all_amt.curr_cd",예,"두 쿼리는 동일한 조건을 사용하여 `view_dv`, `curr_cd`에 따라 `acct_bal_amt`의 합계를 계산하고 있으며, 그룹화 및 필터링 조건이 일치합니다. 변환된 SQL에서 사용된 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 동일하게 나옵니다."
"SELECT bank_nm, COUNT(*) AS acct_cnt, SUM(acct_bal_amt) AS total_acct_bal_amt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm = '신한은행' AND reg_dt = '20250218' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""count"",""column"":""*"",""label"":""acct_cnt""},{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""eq"",""value"":""신한은행""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""}],""group_by"":[""bank_nm""]}",Error: Column '*' not found in AccountAmount,아니오,"변환된 SQL에서 ""COUNT(*)""를 사용하기 위해 필요한 모든 열을 포함하는 ""Column '*'""를 찾을 수 없다는 오류가 발생하므로, 원본 SQL과 동일한 동작을 하지 않습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND acct_dv LIKE '%한도%' AND curr_cd = 'KRW' AND reg_dt = '20250218'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""acct_dv"",""op"":""like"",""value"":""%한도%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt, SUM(real_amt) AS total_real_amt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm IN('신한은행', '기업은행') AND reg_dt = '20250218' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""},{""func"":""sum"",""column"":""real_amt"",""label"":""total_real_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""in"",""value"":[""신한은행"",""기업은행""]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250218""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt, sum(aicfo_get_all_amt.real_amt) AS total_real_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm IN (__[POSTCOMPILE_bank_nm_1]) AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건을 사용하여 `bank_nm`을 기준으로 그룹화하고, `acct_bal_amt`와 `real_amt`의 합계를 계산합니다. 변환된 SQL에서 사용된 바인드 변수와 포스트 컴파일된 값은 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_dv like '%야놀자%' AND reg_dt = '20250217'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""%야놀자%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250217""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 조회하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20241127' AND acct_dv LIKE '%보통예금%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241127""},{""column"":""acct_dv"",""op"":""like"",""value"":""%보통예금%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :acct_dv_1)는 원본 SQL의 상수 값('수시', 'KRW', '20241127', '%보통예금%')과 동일한 의미를 가지므로, 결과적으로 동일한 동작을 수행합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240517' AND acct_dv LIKE '%보통예금%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240517""},{""column"":""acct_dv"",""op"":""like"",""value"":""%보통예금%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절의 필드와 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20241102' AND acct_dv LIKE '%보통예금%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241102""},{""column"":""acct_dv"",""op"":""like"",""value"":""%보통예금%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240816' AND acct_dv LIKE '%한도대출%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240816""},{""column"":""acct_dv"",""op"":""like"",""value"":""%한도대출%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 조회하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240715' AND acct_dv LIKE '%한도대출%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240715""},{""column"":""acct_dv"",""op"":""like"",""value"":""%한도대출%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절에서 선택하는 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240704' AND acct_dv LIKE '%한도대출%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240704""},{""column"":""acct_dv"",""op"":""like"",""value"":""%한도대출%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절에서 선택하는 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :acct_dv_1)는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND acct_dv LIKE '%적금%' AND curr_cd = 'KRW' AND reg_dt = '20200420'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""acct_dv"",""op"":""like"",""value"":""%적금%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20200420""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건을 사용하여 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :acct_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('예적금', '%적금%', 'KRW', '20200420')과 동일한 역할을 하므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND acct_dv LIKE '%예금%' AND curr_cd = 'KRW' AND reg_dt = '20231223'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""acct_dv"",""op"":""like"",""value"":""%예금%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20231223""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 동일한 컬럼을 선택하고 있으며, WHERE 절의 조건도 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND acct_dv LIKE '%적금%' AND curr_cd = 'KRW' AND reg_dt = '20180516'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""acct_dv"",""op"":""like"",""value"":""%적금%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20180516""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건을 사용하여 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :acct_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('예적금', '%적금%', 'KRW', '20180516')과 동일한 역할을 하므로 결과가 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND acct_dv LIKE '%예금%' AND curr_cd = 'KRW' AND reg_dt = '20250211'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""acct_dv"",""op"":""like"",""value"":""%예금%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250211""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 컬럼을 참조하며, 동일한 조건을 사용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20180313' AND acct_dv LIKE '%웹케시글로벌%' AND acct_no LIKE '%1005203820981%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20180313""},{""column"":""acct_dv"",""op"":""like"",""value"":""%웹케시글로벌%""},{""column"":""acct_no"",""op"":""like"",""value"":""%1005203820981%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 조건을 나타내므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND acct_dv LIKE '%비즈플레이%' AND curr_cd = 'KRW' AND reg_dt = '20180313'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""acct_dv"",""op"":""like"",""value"":""%비즈플레이%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20180313""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, acct_dv, curr_cd, reg_dt)을 사용하여 동일한 컬럼을 선택하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 동작이 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240524' AND acct_dv LIKE '%비즈플레이%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240524""},{""column"":""acct_dv"",""op"":""like"",""value"":""%비즈플레이%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :acct_dv_1)는 원본 SQL의 상수 값('수시', 'KRW', '20240524', '%비즈플레이%')과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20190522' AND acct_dv LIKE '%웹케시%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20190522""},{""column"":""acct_dv"",""op"":""like"",""value"":""%웹케시%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건을 사용하여 데이터를 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :acct_dv_1)는 원본 SQL의 상수 값('수시', 'KRW', '20190522', '%웹케시%')과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20190522' AND acct_dv LIKE '%웹케시%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20190522""},{""column"":""acct_dv"",""op"":""like"",""value"":""%웹케시%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과는 동일합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20210918' AND acct_dv LIKE '%당좌%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""acct_dv"",""op"":""like"",""value"":""%당좌%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20210918""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 선택된 컬럼도 동일합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND acct_dv LIKE '%기업자유예금%' AND curr_cd = 'KRW' AND reg_dt = '20240723'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""acct_dv"",""op"":""like"",""value"":""%기업자유예금%""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240723""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20240116'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240116""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20240116')과 동일한 역할을 하므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND acct_bal_amt >= POWER(10,8) AND reg_dt = '20230309'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""ge"",""value"":100000000},{""column"":""reg_dt"",""op"":""eq"",""value"":""20230309""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt >= :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT acct_no, reg_dt, intr_rate FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND reg_dt IN ('20250218', '20250219') AND acct_no LIKE '%1512% ORDER BY reg_dt","{""select"":[""acct_no"",""reg_dt"",""intr_rate""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""in"",""value"":[""20250218"",""20250219""]},{""column"":""acct_no"",""op"":""like"",""value"":""%1512%""}],""order_by"":[{""column"":""reg_dt"",""direction"":""asc""}]}","SELECT aicfo_get_all_amt.acct_no, aicfo_get_all_amt.reg_dt, aicfo_get_all_amt.intr_rate 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt IN (__[POSTCOMPILE_reg_dt_1]) AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 ORDER BY aicfo_get_all_amt.reg_dt ASC",아니오,"변환된 SQL 쿼리에서 `acct_no LIKE '%1512%` 부분이 `acct_no LIKE :acct_no_1`로 변경되었고, `ORDER BY` 절에서 정렬 방향이 명시되지 않아 기본적으로 오름차순으로 처리되지만 원본 SQL에서는 정렬 방향이 명시되지 않았습니다. 또한, 원본 SQL 쿼리에서 `LIKE` 조건의 패턴이 누락되어 있습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND acct_dv LIKE '%적금%' AND open_dt BETWEEN '20231201' AND '20231231' AND reg_dt = '20240928'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""%적금%""},{""column"":""open_dt"",""op"":""between"",""value"":[""20231201"",""20231231""]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240928""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.open_dt BETWEEN :open_dt_1 AND :open_dt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건을 사용하여 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나올 것입니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240302'","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240302""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하여 동일한 컬럼(bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm)을 선택하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND due_dt = '' AND reg_dt = '20250614'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""due_dt"",""op"":""eq"",""value"":""""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250614""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.due_dt = :due_dt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20231205' AND acct_dv LIKE '%예금%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20231205""},{""column"":""acct_dv"",""op"":""like"",""value"":""%예금%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :acct_dv_1)는 원본 SQL의 상수 값('수시', 'KRW', '20231205', '%예금%')과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt, SUM(real_amt) AS total_real_amt FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20240615' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""},{""func"":""sum"",""column"":""real_amt"",""label"":""total_real_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240615""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt, sum(aicfo_get_all_amt.real_amt) AS total_real_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건과 집계 함수를 사용하여 같은 결과를 생성합니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 하드코딩된 값과 동일한 의미를 가지므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND due_dt BETWEEN '20220921' AND '20221109' AND reg_dt = '20221109'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""due_dt"",""op"":""between"",""value"":[""20220921"",""20221109""]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20221109""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.due_dt BETWEEN :due_dt_1 AND :due_dt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 동일한 조건을 사용하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, curr_cd, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND reg_dt = '20231120'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""curr_cd"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20231120""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 동일한 컬럼을 선택하고 있으며, 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20231120')과 동일한 의미를 가지므로 결과가 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20220822'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20220822""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('예적금', 'KRW', '20220822')과 동일한 역할을 하므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, acct_dv, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND acct_bal_amt BETWEEN (35 * POWER(10, 10) * 0.9) AND (35 * POWER(10, 10) * 1.1) AND reg_dt = '20211214'","{""select"":[""bank_nm"",""acct_no"",""acct_dv"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""between"",""value"":[315000000000,385000000000]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20211214""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt BETWEEN :acct_bal_amt_1 AND :acct_bal_amt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절의 컬럼과 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND AND reg_dt = '20190605'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20190605""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",아니오,"변환된 SQL 쿼리에서 `AND`가 두 번 사용되어 있는 원본 SQL 쿼리의 문법 오류가 수정되지 않았습니다. 원본 SQL 쿼리의 `AND AND` 부분은 잘못된 구문이며, 이로 인해 두 쿼리가 동일한 동작을 하지 않습니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20230213'","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20230213""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('증권', 'KRW', '20230213')과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, acct_dv, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND acct_bal_amt = 5 * POWER(10, 7) AND reg_dt = '20181121'","{""select"":[""bank_nm"",""acct_no"",""acct_dv"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":50000000},{""column"":""reg_dt"",""op"":""eq"",""value"":""20181121""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20210509' AND acct_bal_amt = 7 * POWER(10, 7)","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20210509""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":70000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 갖습니다. 따라서 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20171219' AND acct_dv = '웹케시글로벌' AND acct_no LIKE '%1005203820982%'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20171219""},{""column"":""acct_dv"",""op"":""eq"",""value"":""웹케시글로벌""},{""column"":""acct_no"",""op"":""like"",""value"":""%1005203820982%""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv = :acct_dv_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1",예,"두 쿼리는 동일한 테이블과 필드를 참조하며, 조건절도 동일한 값을 기준으로 필터링하고 있습니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20191125' ORDER BY acct_bal_amt DESC LIMIT 1","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20191125""}],""order_by"":[{""column"":""acct_bal_amt"",""direction"":""desc""}],""limit"":1}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 ORDER BY aicfo_get_all_amt.acct_bal_amt DESC",아니오,"변환된 SQL 쿼리는 LIMIT 1이 누락되어 있어 결과의 개수가 다를 수 있습니다. 원본 SQL은 조건에 맞는 결과 중에서 가장 높은 acct_bal_amt를 가진 한 개의 행만을 반환하지만, 변환된 SQL은 LIMIT이 없으므로 모든 결과를 반환할 수 있습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND curr_cd = 'KRW' AND due_dt BETWEEN '20210401' AND '20210430' AND reg_dt = '20210407'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""due_dt"",""op"":""between"",""value"":[""20210401"",""20210430""]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20210407""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.due_dt BETWEEN :due_dt_1 AND :due_dt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 필드를 사용하고 있으며, 조건절도 동일하게 설정되어 있습니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, curr_cd, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd <> 'KRW' AND acct_no LIKE '%9872%' AND reg_dt = '20210628'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""curr_cd"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""ne"",""value"":""KRW""},{""column"":""acct_no"",""op"":""like"",""value"":""%9872%""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20210628""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.curr_cd, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd != :curr_cd_1 AND aicfo_get_all_amt.acct_no LIKE :acct_no_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 필터링하고 있으며, SELECT 절의 컬럼과 WHERE 절의 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20231218'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20231218""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건(view_dv, curr_cd, reg_dt)을 사용하고 있습니다. 변환된 SQL에서 사용된 바인딩 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20231218')과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20190916' AND acct_bal_amt = 1 * POWER(10, 11)","{""select"":[""bank_nm"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20190916""},{""column"":""acct_bal_amt"",""op"":""eq"",""value"":100000000000}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_bal_amt = :acct_bal_amt_1",예,"두 쿼리는 동일한 조건을 사용하여 데이터를 조회하고 있으며, 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 일치하는 것으로 보입니다. 따라서 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_no, deposit_amt, total_appr_amt, acct_bal_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '증권' AND curr_cd = 'KRW' AND reg_dt = '20240630'","{""select"":[""bank_nm"",""acct_no"",""deposit_amt"",""total_appr_amt"",""acct_bal_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""증권""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20240630""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.deposit_amt, aicfo_get_all_amt.total_appr_amt, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블과 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20200331'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20200331""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20200331')과 동일한 역할을 하므로, 결과적으로 두 쿼리는 같은 동작을 수행합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, real_amt, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20230630'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""real_amt"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20230630""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.real_amt, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1)는 원본 SQL의 상수 값('수시', 'KRW', '20230630')과 동일한 역할을 하므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND reg_dt = '20230213' AND acct_dv = '비즈플레이'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20230213""},{""column"":""acct_dv"",""op"":""eq"",""value"":""비즈플레이""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.acct_dv = :acct_dv_1",예,"두 쿼리는 동일한 테이블(aicfo_get_all_amt)에서 동일한 컬럼을 선택하고, 동일한 조건을 사용하여 필터링하고 있습니다. 변환된 SQL에서 사용된 바인드 변수(:view_dv_1, :curr_cd_1, :reg_dt_1, :acct_dv_1)는 원본 SQL의 상수 값('예적금', 'KRW', '20230213', '비즈플레이')과 동일한 의미를 가지므로, 결과적으로 두 쿼리는 같은 동작을 합니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt, SUM(real_amt) AS total_real_amt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND bank_nm IN ('국민은행', '농협은행') AND reg_dt = '20210509' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""},{""func"":""sum"",""column"":""real_amt"",""label"":""total_real_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""bank_nm"",""op"":""in"",""value"":[""국민은행"",""농협은행""]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20210509""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt, sum(aicfo_get_all_amt.real_amt) AS total_real_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.bank_nm IN (__[POSTCOMPILE_bank_nm_1]) AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 집계하고 있으며, 그룹화 및 집계 함수(SUM)를 동일하게 적용하고 있습니다. 변환된 SQL에서 사용된 바인드 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 일치합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND curr_cd = 'KRW' AND acct_dv LIKE '%적금%' AND open_dt BETWEEN '20191201' AND '20191231' AND reg_dt = '20200228'","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""acct_dv"",""op"":""like"",""value"":""%적금%""},{""column"":""open_dt"",""op"":""between"",""value"":[""20191201"",""20191231""]},{""column"":""reg_dt"",""op"":""eq"",""value"":""20200228""}]}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.acct_dv LIKE :acct_dv_1 AND aicfo_get_all_amt.open_dt BETWEEN :open_dt_1 AND :open_dt_2 AND aicfo_get_all_amt.reg_dt = :reg_dt_1",예,"두 쿼리는 동일한 조건을 사용하여 `aicfo_get_all_amt` 테이블에서 데이터를 선택하고 있으며, 필드와 조건이 일치합니다. 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로, 결과는 동일하게 나옵니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND reg_dt = '20180516' AND curr_cd = 'KRW' ORDER BY due_dt ASC LIMIT 1","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20180516""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""}],""order_by"":[{""column"":""due_dt"",""direction"":""asc""}],""limit"":1}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 ORDER BY aicfo_get_all_amt.due_dt ASC",아니오,"변환된 SQL 쿼리는 LIMIT 1이 누락되어 있어 결과의 개수가 다를 수 있습니다. 원본 SQL은 조건에 맞는 결과 중 첫 번째 행만을 반환하지만, 변환된 SQL은 모든 조건에 맞는 결과를 반환합니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '대출' AND reg_dt = '20170317' AND curr_cd = 'KRW' ORDER BY due_dt DSEC LIMIT 1","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""대출""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20170317""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""}],""order_by"":[{""column"":""due_dt"",""direction"":""desc""}],""limit"":1}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 ORDER BY aicfo_get_all_amt.due_dt DESC",아니오,"변환된 SQL 쿼리에서 `ORDER BY due_dt DSEC`가 `ORDER BY aicfo_get_all_amt.due_dt DESC`로 변경되었으나, `DSEC`는 잘못된 구문입니다. 따라서 두 쿼리는 동일한 동작을 하지 않습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND reg_dt = '20241007' AND curr_cd = 'KRW' ORDER BY due_dt ASC LIMIT 1","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20241007""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""}],""order_by"":[{""column"":""due_dt"",""direction"":""asc""}],""limit"":1}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 ORDER BY aicfo_get_all_amt.due_dt ASC",아니오,"변환된 SQL 쿼리에는 LIMIT 1이 누락되어 있어 결과의 개수가 다를 수 있습니다. 원본 SQL은 조건에 맞는 결과 중 첫 번째 행만 반환하지만, 변환된 SQL은 조건에 맞는 모든 결과를 반환할 수 있습니다."
"SELECT bank_nm, acct_dv, acct_no, acct_bal_amt, open_dt, due_dt, intr_rate, acct_bal_upd_dtm FROM aicfo_get_all_amt WHERE view_dv = '예적금' AND reg_dt = '20210903' AND curr_cd = 'KRW' ORDER BY due_dt DESC LIMIT 1","{""select"":[""bank_nm"",""acct_dv"",""acct_no"",""acct_bal_amt"",""open_dt"",""due_dt"",""intr_rate"",""acct_bal_upd_dtm""],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""예적금""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20210903""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""}],""order_by"":[{""column"":""due_dt"",""direction"":""desc""}],""limit"":1}","SELECT aicfo_get_all_amt.bank_nm, aicfo_get_all_amt.acct_dv, aicfo_get_all_amt.acct_no, aicfo_get_all_amt.acct_bal_amt, aicfo_get_all_amt.open_dt, aicfo_get_all_amt.due_dt, aicfo_get_all_amt.intr_rate, aicfo_get_all_amt.acct_bal_upd_dtm 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 ORDER BY aicfo_get_all_amt.due_dt DESC",아니오,"변환된 SQL 쿼리는 LIMIT 1이 누락되어 있어 결과의 개수가 다를 수 있습니다. 원본 SQL은 조건에 맞는 결과 중에서 가장 최근의 한 행만을 반환하지만, 변환된 SQL은 조건에 맞는 모든 행을 반환할 수 있습니다."
"SELECT bank_nm, SUM(acct_bal_amt) AS total_acct_bal_amt, SUM(real_amt) AS total_real_amt FROM aicfo_get_all_amt WHERE view_dv = '수시' AND curr_cd = 'KRW' AND reg_dt = '20250222' GROUP BY bank_nm","{""select"":[""bank_nm"",{""func"":""sum"",""column"":""acct_bal_amt"",""label"":""total_acct_bal_amt""},{""func"":""sum"",""column"":""real_amt"",""label"":""total_real_amt""}],""where"":[{""column"":""view_dv"",""op"":""eq"",""value"":""수시""},{""column"":""curr_cd"",""op"":""eq"",""value"":""KRW""},{""column"":""reg_dt"",""op"":""eq"",""value"":""20250222""}],""group_by"":[""bank_nm""]}","SELECT aicfo_get_all_amt.bank_nm, sum(aicfo_get_all_amt.acct_bal_amt) AS total_acct_bal_amt, sum(aicfo_get_all_amt.real_amt) AS total_real_amt 
FROM aicfo_get_all_amt 
WHERE aicfo_get_all_amt.view_dv = :view_dv_1 AND aicfo_get_all_amt.curr_cd = :curr_cd_1 AND aicfo_get_all_amt.reg_dt = :reg_dt_1 GROUP BY aicfo_get_all_amt.bank_nm",예,"두 쿼리는 동일한 조건과 집계 함수를 사용하여 결과를 그룹화하고 있으며, 변환된 SQL에서 사용된 바인딩 변수는 원본 SQL의 상수 값과 동일한 의미를 가지므로 결과가 일치합니다."
